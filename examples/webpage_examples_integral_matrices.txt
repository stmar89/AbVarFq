/* vim: set syntax=magma : */

/*
This file contains instructions and examples about computing representatives of conjugacy classes of integral matrices with given (square-free) characteristic polynomial.
Moreover we present functions to check wheter two integral matrices with squarefree charactersitic polynomial are conjugate over the integers. 

We refer to the following pre-print for the theoretical background:
- Marseglia, S. (2018). Computing the ideal class monoid of an order (https://arxiv.org/abs/1805.09671)

If you find some mistakes or bugs, don't hesitate to contact me.
*/ 

/////////////////////////////////////////////////////
// Stefano Marseglia, Stockholm University, stefanom@math.su.se, stefano.marseglia89@gmail.com
// http://staff.math.su.se/stefanom/
/////////////////////////////////////////////////////

Attach("packages/Ordersext_0.14.m");
Attach("packages/Picardext_0.4.m");
Attach("packages/IntegralMatrices0.3.m");

////////////////////////////////////////////////////////////////////////////////////////////
//Example 1: representatives of conjugacy classes of integral matrices with given (square-free) characterstic polynomial
////////////////////////////////////////////////////////////////////////////////////////////

_<x>:=PolynomialRing(Integers());
f:=x^6 - 3*x^5 + 6*x^4 - 11*x^3 + 18*x^2 - 27*x + 27;

//there are 33 conjugate classes of (semisimple) integral matrices with characteristic polynomial f, a representative of which will be stored in "mats".
mats:=RepresentativesZConjugate(f); //this might take a couple of minutes.
#mats;
//to check if two integral matrices m1 and m2 are conjugate over the integers use the command IsZConjugate(m1,m2); if this is the case we get also an invertible integral matrix U such that U^-1*m1*U = m2.
IsZConjugate(mats[1],mats[2]);
IsZConjugate(mats[1],mats[1]);

//Given an integral matrix M, if you need the ideal associated to the matrix, you can use MatrixToIdeal(A,M), where A:=AssociativeAlgebra(f); and f:=CharacteristicPolynomial(M); f must be squarefree. It returns a set of generators of the ideal

M:=Random(mats);

A:=AssociativeAlgebra(f);
R:=EquationOrder(A);
id:=ideal<R|MatrixToIdeal(A,M)>;
id2:=Random(R)*id; //this is an isomorphic ideal...
M2:=IdealToMatrix(id2); //..which means that the matrices are conjugate 

test,U:=IsZConjugate(M,M2);
test,U^-1*M*U eq M2;

////////////////////////////////////////////////////////////////////////////////////////////
//Example 2: we check wheter two given matrices (with the same squarefree characteristic polynomial) are conjugate over the integers
////////////////////////////////////////////////////////////////////////////////////////////

M1:=Matrix(Integers(),[
[   162, -13207,     80,  13369, -13678],
[     2,   -163,      2,    164,   -170],
[     0,      0,      0,      0,     -7],
[     0,      0,      1,      0,      0],
[     0,      0,      0,      1,      1]
]);
M2:=Matrix(Integers(),[
[ 163,   28,    0,  -28,   29],
[-955, -164,    1,  163, -171],
[   0,    0,    0,    0,   -7],
[   0,    0,    1,    0,    0],
[   0,    0,    0,    1,    1]
]);

_<x>:=PolynomialRing(Integers());
f:=(x^2+x+8)*(x^3-x^2+7);
CharacteristicPolynomial(M1) eq f;
CharacteristicPolynomial(M2) eq f;
// the two matrices are not conjugate
IsZConjugate(M1,M2);
// now we produce a conjugate matrix by acting with an invertible matrix U and run our function
U:=RandomUnimodularMatrix(5,10);
IsZConjugate(M1,U^-1*M1*U);
